compute_resource:
  google_compute_instance_group_manager:
    paths:
      - cbf::all_select("type";  "google_compute_instance_group_manager")
      - cbf::all_select("type";  "google_compute_region_instance_group_manager")
    type: resource
    variables:
      properties:
        template_config:
          - paths:
              - '.configuration.root_module.resources[] | select(.address == "${this.address}") | .expressions.version[0].instance_template.references[] | select(endswith(".id") or endswith(".name")) | gsub("\\.(id|name)$"; "")'
            reference:
              paths:
                - cbf::all_select("address";  "${key}")
                - .prior_state.values.root_module.resources[] | select(.address == "${key}")
              return_path: true
        autoscaler:
          - paths:
            - '(.configuration.root_module.resources[] | select(.expressions.target?.references[]? == "${this.address}") | .address)'
            reference:
              paths:
                - cbf::all_select("address";  "${key}")
                -  map(select(.address == "${key}"))
                - .prior_state.values.root_module.resources[] | select(.address == "${key}")
              return_path: true
    properties:
      name:
        - paths: ".name"
      address:
        - paths: ".address"
      type:
        - paths: ".type"
      vCPUs:
        - paths: "${template_config}.values.machine_type"
          reference:
            json_file: gcp_machines_types
            property: "vcpus"
        - paths: "${template_config}.values.machine_type"
          regex:
            pattern: ".*custom-([0-9]+)-.*"
            group: 1
            value_type: integer
      memory:
        - paths: "${template_config}.values.machine_type"
          unit: mb
          reference:
            json_file: gcp_machines_types
            property: "memoryMb"
        - paths: "${template_config}.values.machine_type"
          unit: mb
          regex:
            pattern: ".*custom-[0-9]+-([0-9]+).*"
            group: 1
            value_type: integer
      zone:
        - paths: ".values.zone"
      region:
        - paths: ".values.zone"
          regex:
            pattern: "^(.*)-.*$"
            group: 1
        - paths: ".values.distribution_policy_zones[0]"
          regex:
            pattern: "^(.*)-.*$"
            group: 1
      replication_factor:
        - default: 1
      count:
        - paths: ".values.target_size"
        - paths: '${autoscaler}.values.autoscaling_policy[0] | (.min_replicas + (${config.provider.gcp.avg_autoscaler_size_percent} * (.max_replicas - .min_replicas)))'
      cpu_platform:
        - paths: "${template_config}.values.min_cpu_platform"
      guest_accelerator:
        - type: list
          item:
            - paths: "${template_config}.values.guest_accelerator"
              properties:
                count:
                  - paths: ".count"
                    type: integer
                type:
                  - paths: ".type"
                    type: string
      storage:
        - type: list
          item:
            - paths: ${template_config}.values.disk
              properties:
                size:
                  - paths: ".disk_size_gb"
                    unit: gb
                  - paths: ".image"
                    unit: gb
                    reference:
                      paths: .prior_state.values.root_module.resources[] | select(.values.self_link == "${key}") | .values
                      property: "disk_size_gb"
                  - default: 10
                type:
                  - paths: ".disk_type"
                    default: pd-standard
                    reference:
                      general: disk_types
            - paths: .values.scratch_disk
              properties:
                size:
                  - paths: "size"
                    unit: gb
                    default: 375
                type: 
                  - default : ssd    