compute_resource:
  google_compute_instance:
    paths: .planned_values.root_module.resources[] | select(.type == "google_compute_instance")
    type: resource
    properties:
      name:
        paths: ".name"
      address:
        paths: ".address"
      type:
        paths: ".type"
      vCPUs:
        - paths: ".values.machine_type"
          reference:
            json_file: gcp_machines_types
            property: "vcpus"
        - paths: ".values.machine_type"
          regex:
            pattern: ".*custom-([0-9]+)-.*"
            group: 1
            type: integer
      memory:
        - paths: ".values.machine_type"
          unit: mb
          reference:
            json_file: gcp_machines_types
            property: "memoryMb"
        - paths: ".values.machine_type"
          unit: mb
          regex:
            pattern: ".*custom-[0-9]+-([0-9]+).*"
            group: 1
            type: integer
      zone:
        paths: ".values.zone"
      region:
        paths: ".values.zone"
        regex:
          pattern: "^(.*)-.*$"
          group: 1
      replication_factor:
        default: 1
      cpu_platform:
        paths: ".values.cpu_platform"
      guest_accelerator:
        type: list
        item:
          - paths: ".values.guest_accelerator"
            count:
              paths: ".count"
              type: integer
            type:
              paths: ".type"
              type: string
      storage:
        type: list
        item:
          - paths: .values.disk[].initialize_params
            size:
              - paths: ".size"
                default: 10
                unit: gb
              - paths: ".image"
                default: 10
                unit: gb
                reference:
                  paths: '.prior_state.values.root_module.resources[] | select(.values.self_link == "${key}") | .values'
                  property: "disk_size_gb"
            type:
              paths: ".type"
              default: pd-standard
              reference:
                general: disk_types
          - paths: .values.scratch_disk
            size:
              paths: ".size"
              unit: gb
              default: 375
            type: 
              default: ssd
  google_compute_instance_from_template:
    paths:
      - .planned_values.root_module.resources[] | select(.type == "google_compute_instance_from_template")
    type: resource
    variables:
      properties:
        template_config:
          paths:
            - '.configuration.root_module.resources[] | select(.address == "${this.address}") | .expressions.source_instance_template.references[] | select(endswith("id") | not)'
          reference:
            paths:
              - .planned_values.root_module.resources[] | select(.address == "${key}")
              - .planned_values.root_module.child_modules[].resources | map(select(.address == "${key}"))
              - .prior_state.values.root_module.resources[] | select(.address == "${key}")
            return_path: true
    properties:
      name:
        paths: ".name"
      address:
        paths: ".address"
      type:
        paths: ".type"
      vCPUs:
        paths: "${template_config}.values.machine_type"
        reference:
          json_file: gcp_machines_types
          property: "vcpus"
      memory:
        paths: "${template_config}.values.machine_type"
        unit: mb
        reference:
          json_file: gcp_machines_types
          property: "memoryMb"
      zone:
        paths: ".values.zone"
      region:
        paths: ".values.zone"
        regex:
          pattern: "^(.*)-.*$"
          group: 1
      replication_factor:
        default: 1
      cpu_platform:
        paths: "${template_config}.values.min_cpu_platform"
      guest_accelerator:
        type: list
        item:
          - paths: "${template_config}.values.guest_accelerator"
            count:
              paths: ".count"
              type: integer
            type:
              paths: ".type"
              type: string
      storage:
        type: list
        item:
          - paths: ${template_config}.values.disk
            size:
              - paths: ".disk_size_gb"
                unit: gb
              - paths: ".image"
                unit: gb
                reference:
                  paths: .prior_state.values.root_module.resources[] | select(.values.self_link == "${key}") | .values
                  property: "disk_size_gb"
              - default: 10
            type:
              paths: ".disk_type"
              default: pd-standard
              reference:
                general: disk_types
          - paths: .values.scratch_disk
            size:
              paths: "size"
              unit: gb
              default: 375
            type: ssd
  google_compute_disk:
    paths:
      - .planned_values.root_module.resources[] | select(.type == "google_compute_disk")
      - .planned_values.root_module.resources[] | select(.type == "google_compute_region_disk")
    type: resource
    properties:
      name:
        paths: ".name"
      type:
        paths: ".type"
      zone:
        - paths: ".values.zone"
        - paths: ".values.replica_zones[0]"
      region:
        - paths: ".values.zone"
          regex:
            pattern: "^(.*)-.*$"
            group: 1
        - paths: ".values.replica_zones[0]"
          regex:
            pattern: "^(.*)-.*$"
            group: 1
      replication_factor:
        - paths: ".values.replica_zones | length"
        - default: 1
      storage:
        type: list
        item:
          - paths: ".values"
            size:
              - paths: ".size"
                default: 10
                unit: gb
              - paths: ".image"
                default: 10
                unit: gb
                reference:
                  paths: .prior_state.values.root_module.resources[] | select(.values.self_link == "${key}") | .values
                  property: "disk_size_gb"
            type:
              paths: ".type"
              reference:
                general: disk_types
